(()=>{"use strict";var n={837:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n  \n  /* Sections\n     ========================================================================== */\n  \n  /**\n   * Remove the margin in all browsers.\n   */\n  \n  body {\n    margin: 0px;\n  }\n  \n  /**\n   * Render the `main` element consistently in IE.\n   */\n  \n  main {\n    display: block;\n  }\n  \n  /**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n  \n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  \n  /* Grouping content\n     ========================================================================== */\n  \n  /**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n  \n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /* Text-level semantics\n     ========================================================================== */\n  \n  /**\n   * Remove the gray background on active links in IE 10.\n   */\n  \n  a {\n    background-color: transparent;\n  }\n  \n  /**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n  \n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n  }\n  \n  /**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n  \n  b,\n  strong {\n    font-weight: bolder;\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /**\n   * Add the correct font size in all browsers.\n   */\n  \n  small {\n    font-size: 80%;\n  }\n  \n  /**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n  \n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  \n  sub {\n    bottom: -0.25em;\n  }\n  \n  sup {\n    top: -0.5em;\n  }\n  \n  /* Embedded content\n     ========================================================================== */\n  \n  /**\n   * Remove the border on images inside links in IE 10.\n   */\n  \n  img {\n    border-style: none;\n  }\n  \n  /* Forms\n     ========================================================================== */\n  \n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n  \n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  \n  /**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n  \n  button,\n  input { /* 1 */\n    overflow: visible;\n  }\n  \n  /**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n  \n  button,\n  select { /* 1 */\n    text-transform: none;\n  }\n  \n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n  \n  button,\n  [type="button"],\n  [type="reset"],\n  [type="submit"] {\n    appearance: none;\n    -webkit-appearance: button;\n  }\n  \n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n  \n  button::-moz-focus-inner,\n  [type="button"]::-moz-focus-inner,\n  [type="reset"]::-moz-focus-inner,\n  [type="submit"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  \n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n  \n  button:-moz-focusring,\n  [type="button"]:-moz-focusring,\n  [type="reset"]:-moz-focusring,\n  [type="submit"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  \n  /**\n   * Correct the padding in Firefox.\n   */\n  \n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  \n  /**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n  \n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n  \n  /**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n  \n  progress {\n    vertical-align: baseline;\n  }\n  \n  /**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n  \n  textarea {\n    overflow: auto;\n  }\n  \n  /**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n  \n  [type="checkbox"],\n  [type="radio"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n  \n  /**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n  \n  [type="number"]::-webkit-inner-spin-button,\n  [type="number"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  \n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n  \n  [type="search"] {\n    appearance: none;\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  \n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n  \n  [type="search"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  \n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n  \n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  \n  /* Interactive\n     ========================================================================== */\n  \n  /*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n  \n  details {\n    display: block;\n  }\n  \n  /*\n   * Add the correct display in all browsers.\n   */\n  \n  summary {\n    display: list-item;\n  }\n  \n  /* Misc\n     ========================================================================== */\n  \n  /**\n   * Add the correct display in IE 10+.\n   */\n  \n  template {\n    display: none;\n  }\n  \n  /**\n   * Add the correct display in IE 10.\n   */\n  \n  [hidden] {\n    display: none;\n  }\n  ',"",{version:3,sources:["webpack://./src/css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;IACG,iBAAiB,EAAE,MAAM;IACzB,8BAA8B,EAAE,MAAM;EACxC;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,WAAW;EACb;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;IACE,cAAc;IACd,gBAAgB;EAClB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;IACE,uBAAuB,EAAE,MAAM;IAC/B,SAAS,EAAE,MAAM;IACjB,iBAAiB,EAAE,MAAM;EAC3B;;EAEA;;;IAGE;;EAEF;IACE,iCAAiC,EAAE,MAAM;IACzC,cAAc,EAAE,MAAM;EACxB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,6BAA6B;EAC/B;;EAEA;;;IAGE;;EAEF;IACE,mBAAmB,EAAE,MAAM;IAC3B,0BAA0B,EAAE,MAAM;IAClC,iCAAiC,EAAE,MAAM;EAC3C;;EAEA;;IAEE;;EAEF;;IAEE,mBAAmB;EACrB;;EAEA;;;IAGE;;EAEF;;;IAGE,iCAAiC,EAAE,MAAM;IACzC,cAAc,EAAE,MAAM;EACxB;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;;IAEE,cAAc;IACd,cAAc;IACd,kBAAkB;IAClB,wBAAwB;EAC1B;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,WAAW;EACb;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;;;;;IAKE,oBAAoB,EAAE,MAAM;IAC5B,eAAe,EAAE,MAAM;IACvB,iBAAiB,EAAE,MAAM;IACzB,SAAS,EAAE,MAAM;EACnB;;EAEA;;;IAGE;;EAEF;UACQ,MAAM;IACZ,iBAAiB;EACnB;;EAEA;;;IAGE;;EAEF;WACS,MAAM;IACb,oBAAoB;EACtB;;EAEA;;IAEE;;EAEF;;;;IAIE,gBAAgB;IAChB,0BAA0B;EAC5B;;EAEA;;IAEE;;EAEF;;;;IAIE,kBAAkB;IAClB,UAAU;EACZ;;EAEA;;IAEE;;EAEF;;;;IAIE,8BAA8B;EAChC;;EAEA;;IAEE;;EAEF;IACE,8BAA8B;EAChC;;EAEA;;;;;IAKE;;EAEF;IACE,sBAAsB,EAAE,MAAM;IAC9B,cAAc,EAAE,MAAM;IACtB,cAAc,EAAE,MAAM;IACtB,eAAe,EAAE,MAAM;IACvB,UAAU,EAAE,MAAM;IAClB,mBAAmB,EAAE,MAAM;EAC7B;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;;IAEE,sBAAsB,EAAE,MAAM;IAC9B,UAAU,EAAE,MAAM;EACpB;;EAEA;;IAEE;;EAEF;;IAEE,YAAY;EACd;;EAEA;;;IAGE;;EAEF;IACE,gBAAgB;IAChB,6BAA6B,EAAE,MAAM;IACrC,oBAAoB,EAAE,MAAM;EAC9B;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;;IAGE;;EAEF;IACE,0BAA0B,EAAE,MAAM;IAClC,aAAa,EAAE,MAAM;EACvB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,aAAa;EACf;;EAEA;;IAEE;;EAEF;IACE,aAAa;EACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n  \n  /* Sections\n     ========================================================================== */\n  \n  /**\n   * Remove the margin in all browsers.\n   */\n  \n  body {\n    margin: 0px;\n  }\n  \n  /**\n   * Render the `main` element consistently in IE.\n   */\n  \n  main {\n    display: block;\n  }\n  \n  /**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n  \n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  \n  /* Grouping content\n     ========================================================================== */\n  \n  /**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n  \n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /* Text-level semantics\n     ========================================================================== */\n  \n  /**\n   * Remove the gray background on active links in IE 10.\n   */\n  \n  a {\n    background-color: transparent;\n  }\n  \n  /**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n  \n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n  }\n  \n  /**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n  \n  b,\n  strong {\n    font-weight: bolder;\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /**\n   * Add the correct font size in all browsers.\n   */\n  \n  small {\n    font-size: 80%;\n  }\n  \n  /**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n  \n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  \n  sub {\n    bottom: -0.25em;\n  }\n  \n  sup {\n    top: -0.5em;\n  }\n  \n  /* Embedded content\n     ========================================================================== */\n  \n  /**\n   * Remove the border on images inside links in IE 10.\n   */\n  \n  img {\n    border-style: none;\n  }\n  \n  /* Forms\n     ========================================================================== */\n  \n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n  \n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  \n  /**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n  \n  button,\n  input { /* 1 */\n    overflow: visible;\n  }\n  \n  /**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n  \n  button,\n  select { /* 1 */\n    text-transform: none;\n  }\n  \n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n  \n  button,\n  [type="button"],\n  [type="reset"],\n  [type="submit"] {\n    appearance: none;\n    -webkit-appearance: button;\n  }\n  \n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n  \n  button::-moz-focus-inner,\n  [type="button"]::-moz-focus-inner,\n  [type="reset"]::-moz-focus-inner,\n  [type="submit"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  \n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n  \n  button:-moz-focusring,\n  [type="button"]:-moz-focusring,\n  [type="reset"]:-moz-focusring,\n  [type="submit"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  \n  /**\n   * Correct the padding in Firefox.\n   */\n  \n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  \n  /**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n  \n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n  \n  /**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n  \n  progress {\n    vertical-align: baseline;\n  }\n  \n  /**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n  \n  textarea {\n    overflow: auto;\n  }\n  \n  /**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n  \n  [type="checkbox"],\n  [type="radio"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n  \n  /**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n  \n  [type="number"]::-webkit-inner-spin-button,\n  [type="number"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  \n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n  \n  [type="search"] {\n    appearance: none;\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  \n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n  \n  [type="search"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  \n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n  \n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  \n  /* Interactive\n     ========================================================================== */\n  \n  /*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n  \n  details {\n    display: block;\n  }\n  \n  /*\n   * Add the correct display in all browsers.\n   */\n  \n  summary {\n    display: list-item;\n  }\n  \n  /* Misc\n     ========================================================================== */\n  \n  /**\n   * Add the correct display in IE 10+.\n   */\n  \n  template {\n    display: none;\n  }\n  \n  /**\n   * Add the correct display in IE 10.\n   */\n  \n  [hidden] {\n    display: none;\n  }\n  '],sourceRoot:""}]);const c=a},740:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,":root {\n    font-family:\n        -apple-system, BlinkMacSystemFont,\n        'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n        'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: 600;\n    font-size: 28px;\n\n    box-sizing: border-box;\n\n    /* Define all variables to be used here */\n\n    --dark-colour: #1f2937;\n    --mid-colour: #e5e7eb;\n    --light-colour: #f9faf8;\n\n    --start-colour: green;\n    --reset-colour: maroon;\n\n    --start-colour-click: darkgreen;\n    --reset-colour-click-bg: var(--light-colour);\n    --reset-colour-click-text: var(--dark-colour);\n\n    --general-padding: 10px;\n\n    --grid-size: 350px;\n    --grid-gap: 2px;\n    --grid-title-size: 28px;\n\n    --header-text-size: 30px;\n    --header-y-pad: calc(var(--header-text-size) * 0.8);\n    --header-x-pad: calc(var(--header-text-size) * 0.35);\n\n    --reset-text-size: 24px;\n\n    --footer-text-size: 20px;\n    --footer-y-pad: calc(var(--footer-text-size) * 0.5);\n    --footer-x-pad: var(--footer-text-size);\n}\n\n/*\nDefault styles I want set for specific elements\nThis is used to stop horrible, miserable browser defaults that aren't\ncovered in the normalize.css file.\n*/\n\np {\n    margin: 0px;\n}\n\n/* Page styles */\n\n#all-content {\n    height: 100vh;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n#header {\n    background-color: var(--dark-colour);\n    color: var(--light-colour);    \n\n    flex: 0 0 auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n    align-items: center;\n\n    padding: var(--header-y-pad) var(--header-x-pad);\n}\n\n.header-text {\n    font-weight: 650;\n    letter-spacing: 8px;\n    font-size: var(--hedaer-text-size);\n}\n\n#content {\n    background-color: var(--light-colour);\n    color: var(--dark-colour);\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n\n    flex: 8 0 auto;\n}\n\n#side-pane {\n    background-color: #1f2937;\n    border-top: 2px solid var(--light-colour);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: var(--general-padding);\n\n    grid-column: 1 / 2;\n\n    padding: var(--general-padding);\n}\n\n#options {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: calc(10 * var(--general-padding));\n}\n\n#combat-arena {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    /* justify-content: right; */\n    align-items: center;\n\n    /* gap: var(--general-padding); */\n    padding: var(--general-padding);\n\n    grid-column: 2 / 3;\n}\n\n.combatant-arena {\n    display: flex;\n    flex-direction: column;\n    gap: var(--general-padding);\n    justify-content: space-around;\n}\n\n.grid {\n    display: flex;\n    flex-direction: column;\n    gap: var(--grid-gap);\n\n    background-color: #e5e7eb;\n\n    height: var(--grid-size);\n    width: var(--grid-size);\n\n    padding: 4px;\n    flex: 0 0 auto;\n}\n\n.grid-title {\n    color: #1f2937;\n    font-size: var(--grid-title-size);\n    letter-spacing: 4px;\n}\n\n.grid-row {\n    display: flex;\n    flex-direction: row;\n    gap: var(--grid-gap);\n\n    flex: 1 0 auto;\n}\n\n.grid-element {\n    /* min-height: var(--grid-size);\n    min-width: var(--grid-size); */\n\n    /* aspect-ratio: 1 / 1; */\n    /* height: 100%;\n    width: 100%; */\n\n    flex: 1 0 auto;\n\n    background-color: white;\n    /* border: 3px solid red; */\n}\n\n#footer {\n    background-color: var(--mid-colour);\n    color: var(--dark-colour);\n\n    flex: 0 0 auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    padding: var(--footer-y-pad) var(--footer-x-pad);\n}\n\n#credit-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: calc(var(--footer-text-size) * 0.5);\n}\n\n.footer-text {\n    font-weight: 500;\n    font-size: var(--footer-text-size);\n    text-align: center;\n}\n\n#github-image {\n    height: var(--footer-text-size);\n    width: auto;\n\n    min-height: 10px;\n    max-height: 80px;\n}\n\n#start-button,\n#reset-button {\n    border:  2px solid var(--light-colour);\n    border-radius: 10px;\n    outline: none;\n\n    padding: var(--general-padding);\n}\n\n#start-button p,\n#reset-button p {\n    color: var(--light-colour);\n\n    font-size: var(--reset-text-size);\n    font-weight: 550;\n}\n\n#start-button {\n    background-color: var(--start-colour);\n}\n\n#start-button:active {\n    background-color: var(--start-colour-click);\n}\n\n#reset-button {\n    background-color: var(--reset-colour);\n}\n\n#reset-button:active,\n#reset-button:active p {\n    background-color: var(--reset-colour-click-bg);\n    color: var(--reset-colour-click-text);\n}\n\n.ENEMY .has-ship {\n    background-color: white;\n}\n\n.PLAYER .has-ship {\n    background-color: var(--dark-colour);\n}\n\n.miss {\n    background-color: darkgray;\n}\n\n.PLAYER .hit,\n.ENEMY .hit {\n    background-color: var(--reset-colour);\n}","",{version:3,sources:["webpack://./src/css/styles.css"],names:[],mappings:"AAAA;IACI;;;iDAG6C;IAC7C,gBAAgB;IAChB,eAAe;;IAEf,sBAAsB;;IAEtB,yCAAyC;;IAEzC,sBAAsB;IACtB,qBAAqB;IACrB,uBAAuB;;IAEvB,qBAAqB;IACrB,sBAAsB;;IAEtB,+BAA+B;IAC/B,4CAA4C;IAC5C,6CAA6C;;IAE7C,uBAAuB;;IAEvB,kBAAkB;IAClB,eAAe;IACf,uBAAuB;;IAEvB,wBAAwB;IACxB,mDAAmD;IACnD,oDAAoD;;IAEpD,uBAAuB;;IAEvB,wBAAwB;IACxB,mDAAmD;IACnD,uCAAuC;AAC3C;;AAEA;;;;CAIC;;AAED;IACI,WAAW;AACf;;AAEA,gBAAgB;;AAEhB;IACI,aAAa;;IAEb,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,oCAAoC;IACpC,0BAA0B;;IAE1B,cAAc;;IAEd,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,mBAAmB;;IAEnB,gDAAgD;AACpD;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,qCAAqC;IACrC,yBAAyB;;IAEzB,aAAa;IACb,8BAA8B;;IAE9B,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,2BAA2B;;IAE3B,kBAAkB;;IAElB,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,mBAAmB;;IAEnB,iCAAiC;IACjC,+BAA+B;;IAE/B,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,oBAAoB;;IAEpB,yBAAyB;;IAEzB,wBAAwB;IACxB,uBAAuB;;IAEvB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,oBAAoB;;IAEpB,cAAc;AAClB;;AAEA;IACI;kCAC8B;;IAE9B,yBAAyB;IACzB;kBACc;;IAEd,cAAc;;IAEd,uBAAuB;IACvB,2BAA2B;AAC/B;;AAEA;IACI,mCAAmC;IACnC,yBAAyB;;IAEzB,cAAc;;IAEd,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;;IAEnB,gDAAgD;AACpD;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,gBAAgB;IAChB,kCAAkC;IAClC,kBAAkB;AACtB;;AAEA;IACI,+BAA+B;IAC/B,WAAW;;IAEX,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;;IAEI,sCAAsC;IACtC,mBAAmB;IACnB,aAAa;;IAEb,+BAA+B;AACnC;;AAEA;;IAEI,0BAA0B;;IAE1B,iCAAiC;IACjC,gBAAgB;AACpB;;AAEA;IACI,qCAAqC;AACzC;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,qCAAqC;AACzC;;AAEA;;IAEI,8CAA8C;IAC9C,qCAAqC;AACzC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;;IAEI,qCAAqC;AACzC",sourcesContent:[":root {\n    font-family:\n        -apple-system, BlinkMacSystemFont,\n        'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n        'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: 600;\n    font-size: 28px;\n\n    box-sizing: border-box;\n\n    /* Define all variables to be used here */\n\n    --dark-colour: #1f2937;\n    --mid-colour: #e5e7eb;\n    --light-colour: #f9faf8;\n\n    --start-colour: green;\n    --reset-colour: maroon;\n\n    --start-colour-click: darkgreen;\n    --reset-colour-click-bg: var(--light-colour);\n    --reset-colour-click-text: var(--dark-colour);\n\n    --general-padding: 10px;\n\n    --grid-size: 350px;\n    --grid-gap: 2px;\n    --grid-title-size: 28px;\n\n    --header-text-size: 30px;\n    --header-y-pad: calc(var(--header-text-size) * 0.8);\n    --header-x-pad: calc(var(--header-text-size) * 0.35);\n\n    --reset-text-size: 24px;\n\n    --footer-text-size: 20px;\n    --footer-y-pad: calc(var(--footer-text-size) * 0.5);\n    --footer-x-pad: var(--footer-text-size);\n}\n\n/*\nDefault styles I want set for specific elements\nThis is used to stop horrible, miserable browser defaults that aren't\ncovered in the normalize.css file.\n*/\n\np {\n    margin: 0px;\n}\n\n/* Page styles */\n\n#all-content {\n    height: 100vh;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n#header {\n    background-color: var(--dark-colour);\n    color: var(--light-colour);    \n\n    flex: 0 0 auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n    align-items: center;\n\n    padding: var(--header-y-pad) var(--header-x-pad);\n}\n\n.header-text {\n    font-weight: 650;\n    letter-spacing: 8px;\n    font-size: var(--hedaer-text-size);\n}\n\n#content {\n    background-color: var(--light-colour);\n    color: var(--dark-colour);\n\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n\n    flex: 8 0 auto;\n}\n\n#side-pane {\n    background-color: #1f2937;\n    border-top: 2px solid var(--light-colour);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: var(--general-padding);\n\n    grid-column: 1 / 2;\n\n    padding: var(--general-padding);\n}\n\n#options {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: calc(10 * var(--general-padding));\n}\n\n#combat-arena {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    /* justify-content: right; */\n    align-items: center;\n\n    /* gap: var(--general-padding); */\n    padding: var(--general-padding);\n\n    grid-column: 2 / 3;\n}\n\n.combatant-arena {\n    display: flex;\n    flex-direction: column;\n    gap: var(--general-padding);\n    justify-content: space-around;\n}\n\n.grid {\n    display: flex;\n    flex-direction: column;\n    gap: var(--grid-gap);\n\n    background-color: #e5e7eb;\n\n    height: var(--grid-size);\n    width: var(--grid-size);\n\n    padding: 4px;\n    flex: 0 0 auto;\n}\n\n.grid-title {\n    color: #1f2937;\n    font-size: var(--grid-title-size);\n    letter-spacing: 4px;\n}\n\n.grid-row {\n    display: flex;\n    flex-direction: row;\n    gap: var(--grid-gap);\n\n    flex: 1 0 auto;\n}\n\n.grid-element {\n    /* min-height: var(--grid-size);\n    min-width: var(--grid-size); */\n\n    /* aspect-ratio: 1 / 1; */\n    /* height: 100%;\n    width: 100%; */\n\n    flex: 1 0 auto;\n\n    background-color: white;\n    /* border: 3px solid red; */\n}\n\n#footer {\n    background-color: var(--mid-colour);\n    color: var(--dark-colour);\n\n    flex: 0 0 auto;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    padding: var(--footer-y-pad) var(--footer-x-pad);\n}\n\n#credit-div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: calc(var(--footer-text-size) * 0.5);\n}\n\n.footer-text {\n    font-weight: 500;\n    font-size: var(--footer-text-size);\n    text-align: center;\n}\n\n#github-image {\n    height: var(--footer-text-size);\n    width: auto;\n\n    min-height: 10px;\n    max-height: 80px;\n}\n\n#start-button,\n#reset-button {\n    border:  2px solid var(--light-colour);\n    border-radius: 10px;\n    outline: none;\n\n    padding: var(--general-padding);\n}\n\n#start-button p,\n#reset-button p {\n    color: var(--light-colour);\n\n    font-size: var(--reset-text-size);\n    font-weight: 550;\n}\n\n#start-button {\n    background-color: var(--start-colour);\n}\n\n#start-button:active {\n    background-color: var(--start-colour-click);\n}\n\n#reset-button {\n    background-color: var(--reset-colour);\n}\n\n#reset-button:active,\n#reset-button:active p {\n    background-color: var(--reset-colour-click-bg);\n    color: var(--reset-colour-click-text);\n}\n\n.ENEMY .has-ship {\n    background-color: white;\n}\n\n.PLAYER .has-ship {\n    background-color: var(--dark-colour);\n}\n\n.miss {\n    background-color: darkgray;\n}\n\n.PLAYER .hit,\n.ENEMY .hit {\n    background-color: var(--reset-colour);\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],l=i[A]||0,u="".concat(A," ").concat(l);i[A]=l+1;var d=t(u),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(f);else{var p=o(f,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:p,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),s=t.n(c),A=t(216),l=t.n(A),u=t(589),d=t.n(u),f=t(837),p={};p.styleTagTransform=d(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),e()(f.Z,p),f.Z&&f.Z.locals&&f.Z.locals;var h=t(740),m={};function E(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function g(){return document.createElement("div")}function b(){return document.createElement("p")}function y(n,e){return e.forEach((function(e){n.classList.add(e)})),n}function v(n,e){return n.setAttribute("id",e),n}function C(n){for(;n.firstChild;)n.removeChild(n.firstChild)}m.styleTagTransform=d(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;const B=t.p+"3524c849ab38de4be923.png";function I(n){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},I(n)}function x(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,k(r.key),r)}}function k(n){var e=function(n,e){if("object"!=I(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==I(e)?e:String(e)}var w=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}var e,t;return e=n,(t=[{key:"createHeader",value:function(){var n=g(),e=b(),t=g();return n=v(n,"header"),(e=y(e,["header-text"])).textContent="BATTLESHIP",t.appendChild(e),n.appendChild(t),n}},{key:"createContent",value:function(){var n=g();return v(n,"content")}},{key:"createFooter",value:function(){var n=g(),e=b(),t=v(document.createElement("img"),"github-image"),r=g();return n=v(n,"footer"),r=v(r,"credit-div"),e=y(e,["footer-text"]),t.src=B,e.textContent="HPatto",r.append(t),r.appendChild(e),n.appendChild(r),n}},{key:"removeContent",value:function(n){return C(n)}},{key:"setContent",value:function(n,e){return o=n,i=(t=e,r=1,function(n){if(Array.isArray(n))return n}(t)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,i,a,c=[],s=!0,A=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(n){A=!0,o=n}finally{try{if(!s&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(A)throw o}}return c}}(t,r)||function(n,e){if(n){if("string"==typeof n)return E(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?E(n,e):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],C(o),void i.forEach(o.appendChild(newElem));var t,r,o,i}},{key:"setLink",value:function(n,e){n.location.href=e}}])&&x(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function S(n){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},S(n)}function z(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,M(r.key),r)}}function M(n){var e=function(n,e){if("object"!=S(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==S(e)?e:String(e)}var j=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.length=e,this.receivedHits=0,this.sunk=!1}var e,t;return e=n,(t=[{key:"hit",value:function(){this.isSunk()||(this.receivedHits++,this.isSunk()&&(this.sunk=!0))}},{key:"isSunk",value:function(){return this.receivedHits===this.length}}])&&z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function F(n){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},F(n)}function P(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,R(r.key),r)}}function R(n){var e=function(n,e){if("object"!=F(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==F(e)?e:String(e)}var O=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.gameBoard=this.setGameboard(),this.missedAttacks=[],this.Ships=[]}var e,t;return e=n,(t=[{key:"setGameboard",value:function(){for(var n=this.getXCoords(10,65),e=this.getYCoords(10,1),t=this.getAllCoords(n,e),r=t.length,o=new Map,i=0;i<r;i++)o.set(t[i],!1);return o}},{key:"getGameboard",value:function(){return this.gameBoard}},{key:"placeShip",value:function(n,e){var t,r,o=this.getShipLength(n,e),i=new j(o),a=[];n===e?(a.push(n),t=n[0],r=n.slice(1)):n[0]===e[0]?(t=n[0],r=this.getYCoords(o,Math.min(parseInt(n.slice(1)),parseInt(e.slice(1))))):(t=this.getXCoords(o,Math.min(n[0].charCodeAt(0),e[0].charCodeAt(0))),r=n.slice(1)),a=this.getAllCoords(t,r);for(var c=0;c<o;c++)this.gameBoard.set(a[c],i);this.Ships.push(i)}},{key:"getShipLocations",value:function(){var n=[];return this.gameBoard.forEach((function(e,t){!1!==e&&n.push(t)})),n}},{key:"receiveAttack",value:function(n){this.gameBoard.get(n)?this.gameBoard.get(n).hit():this.missedAttacks.push(n)}},{key:"getShipLength",value:function(n,e){var t=1+this.getAsciiDifference(n[0],e[0]),r=1+Math.abs(parseInt(n.slice(1))-parseInt(e.slice(1)));return Math.max(t,r)}},{key:"getXCoords",value:function(n,e){return this.getArrayFromAscii(n,e)}},{key:"getYCoords",value:function(n,e){for(var t=[],r=0;r<n;r++)t.push((e+r).toString());return t}},{key:"getAllCoords",value:function(n,e){for(var t=[],r=n.length,o=e.length,i=0;i<r;i++)for(var a=0;a<o;a++){var c=n[i]+e[a];t.push(c)}return t}},{key:"getArrayFromAscii",value:function(n,e){for(var t=[],r=0;r<n;r++)t.push(String.fromCharCode(e+r));return t}},{key:"getAsciiDifference",value:function(n,e){var t=n.charCodeAt(0),r=e.charCodeAt(0);return Math.abs(t-r)}},{key:"getMissedAttacks",value:function(){return this.missedAttacks}},{key:"getAllShipsSunk",value:function(){return 0!==this.Ships.length&&this.Ships.every((function(n){return n.isSunk()}))}}])&&P(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function L(n){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},L(n)}function G(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,T(r.key),r)}}function T(n){var e=function(n,e){if("object"!=L(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==L(e)?e:String(e)}var D=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.playerGameboard=this.setGameboard(),this.alreadyCalled=[]}var e,t;return e=n,(t=[{key:"sendAttack",value:function(n){return this.alreadyCalled.push(n),n}},{key:"receieveAttack",value:function(n){this.playerGameboard.receiveAttack(n)}},{key:"setGameboard",value:function(){return new O}},{key:"placeShip",value:function(n,e){this.playerGameboard.placeShip(n,e)}},{key:"getShipLocations",value:function(){return this.playerGameboard.getShipLocations()}},{key:"hasLost",value:function(){return this.playerGameboard.getAllShipsSunk()}},{key:"isValidAttack",value:function(n){return!this.alreadyCalled.includes(n)}},{key:"sendRandomAttack",value:function(){for(var n=void 0;void 0===n||!this.isValidAttack(n);)n=this.getRandomLetter(10)+this.getRandomNumber(1,10);return this.sendAttack(n)}},{key:"coordsInUse",value:function(n){var e=this,t=[];return n.forEach((function(n){t.push(e.coordInUse(n))})),t.includes(!0)}},{key:"coordInUse",value:function(n){return this.getShipLocations().includes(n)}},{key:"setShipCoords",value:function(n){for(var e=!1;!1===e||this.coordsInUse(e);)e=this.buildShipCoords(this.getSeedCoord(n),this.getOrientation(),n);this.placeShip(e[0],e[e.length-1])}},{key:"buildShipCoords",value:function(n,e,t){var r=n[0],o=n[1],i=[];return 0===e?this.playerGameboard.getXCoords(t,r.charCodeAt(0)).forEach((function(n){var e=""+n+o;i.push(e)})):this.playerGameboard.getYCoords(t,o).forEach((function(n){var e=""+r+n;i.push(e)})),i}},{key:"getOrientation",value:function(){return Math.floor(2*Math.random())}},{key:"getSeedCoord",value:function(n){return[this.getRandomLetter(11-n),this.getRandomNumber(1,11-n)]}},{key:"getRandomLetter",value:function(n){var e=Math.floor(Math.random()*n)+65;return String.fromCharCode(e)}},{key:"getRandomNumber",value:function(n,e){return Math.floor(Math.random()*(e-n+1))+n}}])&&G(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function q(n){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},q(n)}function Y(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,U(r.key),r)}}function U(n){var e=function(n,e){if("object"!=q(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==q(e)?e:String(e)}var N=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.firstPlayer,this.secondPlayer,this.winner,this.shotsFired=0,this.mostRecentAIAttack}var e,t;return e=n,(t=[{key:"setGame",value:function(){this.setPlayers(),this.setShips()}},{key:"setPlayers",value:function(){this.firstPlayer=new D,this.secondPlayer=new D}},{key:"setShips",value:function(){for(var n=0;n<5;n++)this.firstPlayer.setShipCoords(n+1),this.secondPlayer.setShipCoords(n+1)}},{key:"getShips",value:function(n){return n.getShipLocations()}},{key:"engageInCombat",value:function(){if(this.shotsFired%2!=0){var n=this.secondPlayer.sendRandomAttack();this.firstPlayer.receieveAttack(n),this.shotsFired++,this.mostRecentAIAttack=n}}},{key:"fireShot",value:function(n){this.firstPlayer.sendAttack(n),this.secondPlayer.receieveAttack(n),this.shotsFired++}},{key:"mostRecentAttack",value:function(){return this.mostRecentAIAttack}},{key:"isGameOver",value:function(){return this.hasPlayerLost(this.firstPlayer)?(this.winner="Player Two Wins!",!0):!!this.hasPlayerLost(this.secondPlayer)&&(this.winner="Player One Wins!",!0)}},{key:"hasPlayerLost",value:function(n){return n.hasLost()}}])&&Y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function Z(n){return Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Z(n)}function H(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function W(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,$(r.key),r)}}function $(n){var e=function(n,e){if("object"!=Z(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=Z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Z(e)?e:String(e)}var X=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.game}var e,t;return e=n,t=[{key:"engage",value:function(){this.game=new N,this.game.setGame(),this.displayShips("PLAYER")}},{key:"playGame",value:function(){this.game.playGame()}},{key:"gameOver",value:function(){return this.game.isGameOver()}},{key:"userAttack",value:function(n){if(n.classList.contains("miss")||n.classList.contains("hit"))return-1;if(n.classList.contains("grid-element")){var e=(t=n.classList,function(n){if(Array.isArray(n))return H(n)}(t)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||function(n,e){if(n){if("string"==typeof n)return H(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?H(n,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[1];this.game.fireShot(e),n=this.game.secondPlayer.getShipLocations().includes(e)?y(n,["hit"]):y(n,["miss"])}var t}},{key:"aiAttack",value:function(){this.game.engageInCombat();var n=this.game.mostRecentAttack(),e=document.querySelector(".grid-element."+n+".PLAYER");e=e.classList.contains("has-ship")?y(e,["hit"]):y(e,["miss"])}},{key:"displayShips",value:function(n){var e=("PLAYER"===n?this.game.firstPlayer:this.game.secondPlayer).getShipLocations();document.querySelectorAll("."+n).forEach((function(n){e.forEach((function(e){n.classList.contains(e)&&(n=y(n,["has-ship"]))}))}))}},{key:"buildSidePane",value:function(){var n=document.createElement("div");n=v(n,"side-pane");var e=this.buildOptions();return n.appendChild(e),n}},{key:"buildOptions",value:function(){var n=document.createElement("div");return(n=v(n,"options")).appendChild(this.buildStartButton()),n.appendChild(this.buildResetButton()),n}},{key:"buildResetButton",value:function(){var n=document.createElement("button"),e=document.createElement("p");return n=v(n,"reset-button"),e.textContent="SURRENDER",n.appendChild(e),n}},{key:"buildStartButton",value:function(){var n=document.createElement("button"),e=document.createElement("p");return n=v(n,"start-button"),e.textContent="ENGAGE",n.appendChild(e),n}},{key:"buildCombatArena",value:function(){var n=document.createElement("div");n=v(n,"combat-arena"),this.game=new N,this.game.setPlayers();var e=this.buildGrid("PLAYER"),t=this.buildGrid("ENEMY");return n.appendChild(e),n.appendChild(t),n}},{key:"buildGrid",value:function(n){var e=document.createElement("div"),t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("p"),i=[10,9,8,7,6,5,4,3,2,1];e=y(e,["combatant-arena"]),t=y(t,["grid",n]),r=y(r,["grid-title"]),o.textContent=n;for(var a=0;a<10;a++){var c=this.buildRow(i[a],n);t.appendChild(c)}return r.appendChild(o),e.appendChild(r),e.appendChild(t),e}},{key:"buildRow",value:function(n,e){var t=document.createElement("div"),r=["A","B","C","D","E","F","G","H","I","J"];t=y(t,["grid-row",e]);for(var o=0;o<10;o++){var i=document.createElement("div");i=y(i,["grid-element",r[o]+n,e]),t.appendChild(i)}return t}}],t&&W(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function J(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function V(n){console.log("GAME OVER. "+n+" WINS!"),document.querySelector(".grid.ENEMY").removeEventListener("click",K)}var K=function(n,e,t){var r=n.target;e.userAttack(r),e.gameOver()?V("PLAYER"):(e.aiAttack(),e.gameOver()&&V("ENEMY"))};document.addEventListener("DOMContentLoaded",(function(){var n,e,t=(n=function(){var n=new w,e=new X;return function(n,e){var t=document.querySelector("#all-content");e.removeContent(t);var r=e.createHeader(),o=e.createContent(),i=e.createFooter();o.appendChild(n.buildSidePane()),o.appendChild(n.buildCombatArena()),t.appendChild(r),t.appendChild(o),t.appendChild(i)}(e,n),[n,e]}(),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,i,a,c=[],s=!0,A=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(n){A=!0,o=n}finally{try{if(!s&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(A)throw o}}return c}}(n,e)||function(n,e){if(n){if("string"==typeof n)return J(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?J(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=t[0],o=t[1];document.querySelector("#start-button").addEventListener("click",(function(){!function(n,e){var t=document.querySelector("#combat-arena");n.removeChild(t),n.appendChild(e.buildCombatArena())}(document.querySelector("#content"),o);var n=document.querySelector(".grid.ENEMY");o.engage(),n.addEventListener("click",(function(n){K(n,o,r)}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,